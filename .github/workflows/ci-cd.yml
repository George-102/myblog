name: Java CI/CD with Maven and Docker

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B clean package

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          # 使用 --no-cache 确保重新拉取镜像
          docker build --no-cache -t my-blog:${{ github.sha }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: |
          docker tag my-blog:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/my-blog:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-blog:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            # 配置服务器使用国内镜像源
            sudo mkdir -p /etc/docker
            sudo tee /etc/docker/daemon.json <<-'EOF'
            {
              "registry-mirrors": ["https://hub-mirror.c.163.com"]
            }
            EOF
            sudo systemctl daemon-reload
            sudo systemctl restart docker
            
            # 拉取镜像
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-blog:latest
            
            # 停止并删除旧容器
            docker stop live-blog || true
            docker rm live-blog || true
            
            # 运行新容器
            docker run -d \
              --name live-blog \
              -p 8080:8080 \
              -e "JDBC_URL=jdbc:mysql://${{ secrets.DB_HOST }}:3306/myblog?useSSL=false&serverTimezone=UTC" \
              -e "JDBC_USER=${{ secrets.DB_USER }}" \
              -e "JDBC_PASSWORD=${{ secrets.DB_PASSWORD }}" \
              ${{ secrets.DOCKERHUB_USERNAME }}/my-blog:latest
            
            echo "部署完成！"
            docker ps