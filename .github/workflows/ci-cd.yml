name: Java CI/CD with Maven and Docker

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B clean package

      - name: Debug - Check project structure
        run: |
          echo "=== 详细文件结构检查 ==="
          echo "当前目录:"
          pwd
          echo "所有文件:"
          ls -la
          echo "src目录:"
          ls -la src/
          echo "target目录:"
          ls -la target/ || echo "target目录不存在"
          echo "尝试查找WAR文件:"
          find . -name "*.war" -type f || echo "没有找到WAR文件"
          echo "Maven打包结果:"
          mvn help:effective-pom | grep packaging || echo "无法获取打包类型"

      - name: Debug - Check Maven build output
        run: |
          echo "=== Maven构建详情 ==="
          # 再次运行Maven并显示详细输出
          mvn -X clean package | grep -A 10 -B 10 "packaging" || echo "无法获取详细构建信息"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          # 使用 --no-cache 确保重新拉取镜像
          docker build --no-cache -t my-blog:${{ github.sha }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: |
          docker tag my-blog:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/my-blog:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-blog:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            echo "配置Docker国内镜像加速器..."
            sudo mkdir -p /etc/docker
            sudo tee /etc/docker/daemon.json << 'EOF'
            {
              "registry-mirrors": [
                "https://hub-mirror.c.163.com",
                "https://mirror.baidubce.com", 
                "https://docker.mirrors.ustc.edu.cn"
              ]
            }
            EOF
            sudo systemctl daemon-reload
            sudo systemctl restart docker
            sleep 3

            echo "开始拉取镜像..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-blog:latest

            echo "启动容器..."
            docker run -d --name live-blog -p 8080:8080 \
              -e "JDBC_URL=jdbc:mysql://${{ secrets.DB_HOST }}:3306/myblog?useSSL=false&serverTimezone=UTC" \
              -e "JDBC_USER=${{ secrets.DB_USER }}" \
              -e "JDBC_PASSWORD=${{ secrets.DB_PASSWORD }}" \
              ${{ secrets.DOCKERHUB_USERNAME }}/my-blog:latest